const message = `
前回出力した記事に、mermaid.jsを使用したダイアグラムを適切に挿入し、記事に視覚的な補完を行い、更に完成度を高めてください。
以下の点を必ず考慮してください：

1. 記事の構造と文字数:
   - 記事の本文は必ず ==articleStart== タグで始め、==articleEnd== タグで終えてください。これらのタグの間に記事の主要な内容をすべて含めてください。
   - 記事全体が ==articleStart== と ==articleEnd== タグで正しく囲まれていることを再度確認してください。これらのタグの外には、タイトルや追加の注記以外の内容を含めないでください。
   - 文字数が12800字から16000字の間であることを必ず確認してください。この範囲に収まっていない場合は、セクションや取り扱う項目を増やすなどし、内容を増やすようにしてください。

2. ダイアグラムの作成と使用:
   適切な場合、以下のタイプのダイアグラムを使用することを検討してください：
   - フローチャート（Flowchart）
   - シーケンス図（Sequence Diagram）
   - クラス図（Class Diagram）
   - 状態遷移図（State Diagram）
   - ER図（Entity Relationship Diagram）
   - ユーザージャーニー（User Journey）
   - ガントチャート（Gantt）
   - 円グラフ（Pie Chart）
   - 四分割図（Quadrant Chart）
   - 要求図（Requirement Diagram）
   - Gitグラフ（Gitgraph Diagram）
   - C4図（C4 Diagram）
   - マインドマップ（Mindmaps）
   - タイムライン（Timeline）
   - ZenUML
   - サンキー図（Sankey）
   - その他適切なダイアグラム

   使用してはいけないダイアグラム:
   - XY散布図（XYChart）
   - ブロック図（Block Diagram）
   ※ これらのダイアグラムは、現在ベータバージョンであるため使用しないでください。

3. ダイアグラム作成時の注意点:
   - 完全で完璧なダイアグラムを目指し、わかりやすさを最優先してください。
   - 適切なラベル、説明、色分けを使用して情報を明確に伝えてください。
   - 複雑な概念を視覚的に表現し、読者の理解を促進するようにしてください。
   - ダイアグラムは記事の文脈に適切に組み込み、前後の説明と整合性を持たせてください。
   - ダイアグラムの作成には、mermaid.jsを使用してください。他のツールやソフトウェアは使用しないでください。
   - ダイアグラムの内容は情報が細かく沢山詰まっていることが読者の目を引くことになるので、それに対応してください。

4. ダイアグラムの挿入方法：
   - mermaid.jsのコードブロックを使用してください。例：
     \`\`\`mermaid
     [ここにmermaid.jsのコードを記述]
     \`\`\`
   - 各ダイアグラムの前後に、そのダイアグラムが何を表しているか、どのように解釈すべきかの説明を加えてください。

5. ダイアグラムの使用に関する重要な注意事項：
   - ダイアグラムは記事の内容を補完し、視覚的に強化するために使用します。ただし、適切な場合にのみ使用してください。
   - 可能であれば、少なくとも1つのダイアグラムを含めることを推奨します。ただし、トピックや内容によってはダイアグラムが適さない場合もあります。その場合は無理に挿入する必要はありません。
   - 複数のダイアグラムを使用することは、記事の長さと複雑さに応じて検討してください。ただし、ダイアグラムの数よりも、各ダイアグラムの質と関連性を重視してください。
   - ダイアグラムが記事の理解を助けない場合や、文章での説明で十分な場合は、ダイアグラムを省略しても構いません。

6. ダイアグラムの配置：
   - 記事の構造に合わせて、関連する箇所にダイアグラムを配置してください。ただし、無理に配置する必要はありません。
   - 各セクションの主要な概念や流れを視覚化するのに適した場所がある場合にのみ、ダイアグラムを使用してください。
   - ダイアグラムを使用する場合、できるだけ記事の前半（例：はじめにの後や主要な概念の説明時）に最初のダイアグラムを配置することを検討してください。

7. ダイアグラムと文章のバランス:
   - ダイアグラムは記事の内容を視覚的に強化するために使用し、文章での説明を置き換えるものではありません。
   - 複雑な概念や関係性を説明する際は、文章による詳細な説明とダイアグラムによる視覚的表現を組み合わせて使用してください。
   - 各ダイアグラムが記事全体の流れや構造にどのように貢献しているかを意識し、適切に配置してください。

8. 最終チェックリスト（必須確認事項）:

   記事の構造と内容:
   - [ ] 記事が ==articleStart== と ==articleEnd== タグで適切に囲まれていることを確認
   - [ ] 文字数が12800字から16000字の間であることを確認
   - [ ] 各セクションが論理的に構成され、流れがスムーズであることを確認
   - [ ] 技術的な内容が正確で最新であることを確認
   - [ ] 専門用語や概念に適切な説明が付されていることを確認

   ダイアグラム（視覚的情報の補完）:
   - [ ] ダイアグラムを使用する場合、mermaid.jsダイアグラムが適切に配置されていることを確認
   - [ ] 使用されているダイアグラムが情報密度の高い、詳細な内容を含んでいることを確認
   - [ ] ダイアグラムが記事の重要概念を視覚的に表現し、テキストを補完する情報を提供していることを確認
   - [ ] ダイアグラムを使用している場合、その前後に内容の詳細な解説があり、記事の本文と密接に関連付けられていることを確認
   - [ ] ダイアグラムが使用されている場合、それが記事全体の流れを補強し、読者の理解を促進する配置になっていることを確認

   全体的な品質:
   - [ ] 記事が読者にとって価値のある、詳細で洞察に富んだ内容であることを確認
   - [ ] 文章が明確で、専門家にも初心者にも理解しやすいことを確認
   - [ ] 必要に応じて、適切な参考文献や追加リソースが提供されていることを確認

注意: このチェックリストの全項目を満たすことが、高品質な技術記事作成の条件です。ただし、ダイアグラムの使用が適切でない場合は、その他の項目に重点を置いて記事の品質を確保してください。

これらの指示に従い、適切な場合にのみダイアグラムを効果的に活用して、理解しやすく、情報量の多い技術記事を作成してください。ダイアグラムの使用が適切でない場合は、文章での説明に重点を置き、高品質な記事を作成することに注力してください。
`;

export function getAddDiagramPromptMessage() {
	return message;
}
